import{_ as i}from"./1-文件夹简介区-DcIx0lWK.js";import{_ as o,r as l,o as p,c,b as s,d as a,w as t,a as r,e}from"./app-D0VI1FnG.js";const u="/assets/%E7%AC%A6%E5%90%88%E7%AE%80%E4%BB%8B%E8%A7%84%E5%88%99%E7%9A%84%E6%96%87%E4%BB%B6-BIMLrx9J.webp",d="/assets/2-%E6%96%87%E4%BB%B6%E7%AE%80%E4%BB%8B%E5%8C%BA-Dg9_Odka.webp",m={},g=r(`<h1 id="挂载-github-repos" tabindex="-1"><a class="header-anchor" href="#挂载-github-repos"><span>挂载 GitHub Repos</span></a></h1><p>将 GitHub Repos 挂载到 FList 上</p><h2 id="配置方法" tabindex="-1"><a class="header-anchor" href="#配置方法"><span>配置方法</span></a></h2><p>将 <code>Aikoyori</code> 的 <code>ProgrammingVTuberLogos</code> 仓库挂载到根目录 <code>/</code> 下</p><ul><li>mountPath: 挂载路径,就是将文件源中的文件放到什么路径下</li><li>analysis: 文件源分析器，这里使用的是 <code>githubReposAnalysis</code>，用于解析 GitHub Repos 中的文件</li></ul><div class="language-typescript" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  mountPath<span class="token operator">:</span> <span class="token string">&quot;/ProgrammingVTuberLogos&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  analysis<span class="token operator">:</span> <span class="token function">githubReposAnalysis</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">    user<span class="token operator">:</span> <span class="token string">&quot;Aikoyori&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    repository<span class="token operator">:</span> <span class="token string">&quot;ProgrammingVTuberLogos&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token comment">// rootPath: string, //根路径,挂载仓库的路径</span></span>
<span class="line">    <span class="token comment">// authorizationToken: string, //github token</span></span>
<span class="line">    <span class="token comment">// ref: string, //github分支</span></span>
<span class="line">    <span class="token comment">// maxDeep: number, //最大深度,默认10</span></span>
<span class="line">    <span class="token comment">// hideReadme: true, //隐藏README.MD文件</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div><p>这样就把 <code>Aikoyori</code> 的 <code>ProgrammingVTuberLogos</code> 仓库挂载到了根目录 <code>/</code> 下了。</p><h2 id="githubreposanalysis-特性" tabindex="-1"><a class="header-anchor" href="#githubreposanalysis-特性"><span>githubReposAnalysis 特性</span></a></h2><h3 id="将文件夹中的-readme-md-文件显示在文件夹的简介区" tabindex="-1"><a class="header-anchor" href="#将文件夹中的-readme-md-文件显示在文件夹的简介区"><span>将文件夹中的 README.MD 文件显示在文件夹的简介区</span></a></h3><p>如果当前文件夹中有 README.MD 文件，则会将 README.MD 文件 显示在文件夹的简介区。</p><p><img src="`+i+'" alt="文件夹简介区" loading="lazy"></p><h3 id="将相同文件名-readme-md-结尾的文件现在在简介区" tabindex="-1"><a class="header-anchor" href="#将相同文件名-readme-md-结尾的文件现在在简介区"><span>将相同文件名 .README.MD 结尾的文件现在在简介区</span></a></h3><p>例如有两个文件 <code>A.exe</code> <code>A.exe.README.MD</code> 在同一个文件夹中，则会将 <code>A.exe.README.MD</code> 的内容显示在 <code>A.exe</code> 文件的简介区。</p><p><img src="'+u+'" alt="符合简介规则的文件" loading="lazy"></p><p><img src="'+d+`" alt="文件简介区" loading="lazy"></p><h2 id="最佳实践" tabindex="-1"><a class="header-anchor" href="#最佳实践"><span>最佳实践</span></a></h2><h3 id="关于下载代理" tabindex="-1"><a class="header-anchor" href="#关于下载代理"><span>关于下载代理</span></a></h3><p>如果直接从GitHub下载速度可能不佳。</p><p>并且由于跨域的原因，PDF，TXT，这些文件无法预览，只能下载。（视频图片音频可以预览）。</p><p><strong>建议配置下载代理,</strong> 可以加速下载和解决跨域问题。</p><h3 id="readme-md-文件太多影响观感" tabindex="-1"><a class="header-anchor" href="#readme-md-文件太多影响观感"><span>.README.MD 文件太多影响观感</span></a></h3><p>可以使用 hideReadme 选项将这些文件隐藏掉。</p><div class="language-typescript" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token operator">...</span><span class="token punctuation">.</span><span class="token punctuation">.</span></span>
<span class="line">  analysis<span class="token operator">:</span> <span class="token function">githubReposAnalysis</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token operator">...</span><span class="token punctuation">.</span><span class="token punctuation">.</span></span>
<span class="line">    hideReadme<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">//隐藏README.MD文件</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div><h2 id="下一步" tabindex="-1"><a class="header-anchor" href="#下一步"><span>下一步</span></a></h2>`,24);function h(k,f){const n=l("RouteLink");return p(),c("div",null,[g,s("ul",null,[s("li",null,[a(n,{to:"/articles/11-Flist/5-%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E5%86%99%E6%B3%95/3-%E4%BB%A3%E7%90%86.html"},{default:t(()=>[e("-> 配置下载代理")]),_:1})]),s("li",null,[a(n,{to:"/articles/11-Flist/6-%E9%83%A8%E7%BD%B2%E5%88%B0%E8%87%AA%E5%B7%B1%E5%96%9C%E6%AC%A2%E7%9A%84%E5%B9%B3%E5%8F%B0.html"},{default:t(()=>[e("-> 部署到自己喜欢的平台")]),_:1})])])])}const y=o(m,[["render",h],["__file","index.html.vue"]]),R=JSON.parse('{"path":"/2024/8/14/flist-config-mount-git-hub-Repos/","title":"FList - 挂载 GitHub Repos","lang":"zh-CN","frontmatter":{"permalinkPattern":"2024/8/14/flist-config-mount-git-hub-Repos/","title":"FList - 挂载 GitHub Repos","star":false,"comment":true,"description":"挂载 GitHub Repos 将 GitHub Repos 挂载到 FList 上 配置方法 将 Aikoyori 的 ProgrammingVTuberLogos 仓库挂载到根目录 / 下 mountPath: 挂载路径,就是将文件源中的文件放到什么路径下 analysis: 文件源分析器，这里使用的是 githubReposAnalysis，用于...","head":[["meta",{"property":"og:url","content":"https://jjaw.cn/2024/8/14/flist-config-mount-git-hub-Repos/"}],["meta",{"property":"og:site_name","content":"神奇小破站"}],["meta",{"property":"og:title","content":"FList - 挂载 GitHub Repos"}],["meta",{"property":"og:description","content":"挂载 GitHub Repos 将 GitHub Repos 挂载到 FList 上 配置方法 将 Aikoyori 的 ProgrammingVTuberLogos 仓库挂载到根目录 / 下 mountPath: 挂载路径,就是将文件源中的文件放到什么路径下 analysis: 文件源分析器，这里使用的是 githubReposAnalysis，用于..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-09-21T11:51:38.000Z"}],["meta",{"property":"article:modified_time","content":"2024-09-21T11:51:38.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"FList - 挂载 GitHub Repos\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-09-21T11:51:38.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"配置方法","slug":"配置方法","link":"#配置方法","children":[]},{"level":2,"title":"githubReposAnalysis 特性","slug":"githubreposanalysis-特性","link":"#githubreposanalysis-特性","children":[{"level":3,"title":"将文件夹中的 README.MD 文件显示在文件夹的简介区","slug":"将文件夹中的-readme-md-文件显示在文件夹的简介区","link":"#将文件夹中的-readme-md-文件显示在文件夹的简介区","children":[]},{"level":3,"title":"将相同文件名 .README.MD 结尾的文件现在在简介区","slug":"将相同文件名-readme-md-结尾的文件现在在简介区","link":"#将相同文件名-readme-md-结尾的文件现在在简介区","children":[]}]},{"level":2,"title":"最佳实践","slug":"最佳实践","link":"#最佳实践","children":[{"level":3,"title":"关于下载代理","slug":"关于下载代理","link":"#关于下载代理","children":[]},{"level":3,"title":".README.MD 文件太多影响观感","slug":"readme-md-文件太多影响观感","link":"#readme-md-文件太多影响观感","children":[]}]},{"level":2,"title":"下一步","slug":"下一步","link":"#下一步","children":[]}],"git":{"isRoot":true,"createdTime":1723603672000,"updatedTime":1726919498000,"contributors":[{"name":"jjaw","email":"jjaw@jjaw.cn","commits":1},{"name":"简简爱","email":"2801819967@qq.com","commits":1}]},"excerpt":"\\n<p>将 GitHub Repos 挂载到 FList 上</p>\\n<h2>配置方法</h2>\\n<p>将 <code>Aikoyori</code> 的 <code>ProgrammingVTuberLogos</code> 仓库挂载到根目录 <code>/</code> 下</p>\\n<ul>\\n<li>mountPath: 挂载路径,就是将文件源中的文件放到什么路径下</li>\\n<li>analysis: 文件源分析器，这里使用的是 <code>githubReposAnalysis</code>，用于解析 GitHub Repos 中的文件</li>\\n</ul>\\n<div class=\\"language-typescript\\" data-highlighter=\\"prismjs\\" data-ext=\\"ts\\" data-title=\\"ts\\"><pre class=\\"language-typescript\\"><code><span class=\\"line\\"><span class=\\"token punctuation\\">{</span></span>\\n<span class=\\"line\\">  mountPath<span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"/ProgrammingVTuberLogos\\"</span><span class=\\"token punctuation\\">,</span></span>\\n<span class=\\"line\\">  analysis<span class=\\"token operator\\">:</span> <span class=\\"token function\\">githubReposAnalysis</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">{</span></span>\\n<span class=\\"line\\">    user<span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"Aikoyori\\"</span><span class=\\"token punctuation\\">,</span></span>\\n<span class=\\"line\\">    repository<span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"ProgrammingVTuberLogos\\"</span><span class=\\"token punctuation\\">,</span></span>\\n<span class=\\"line\\">    <span class=\\"token comment\\">// rootPath: string, //根路径,挂载仓库的路径</span></span>\\n<span class=\\"line\\">    <span class=\\"token comment\\">// authorizationToken: string, //github token</span></span>\\n<span class=\\"line\\">    <span class=\\"token comment\\">// ref: string, //github分支</span></span>\\n<span class=\\"line\\">    <span class=\\"token comment\\">// maxDeep: number, //最大深度,默认10</span></span>\\n<span class=\\"line\\">    <span class=\\"token comment\\">// hideReadme: true, //隐藏README.MD文件</span></span>\\n<span class=\\"line\\">  <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span></span>\\n<span class=\\"line\\"><span class=\\"token punctuation\\">}</span></span>\\n<span class=\\"line\\"></span></code></pre></div>","autoDesc":true,"github_edit":{"fileGitUrl":"https://github.com/jianjianai/jjaw.cn/edit/master/articles/11-Flist/5-配置文件写法/2-挂载/5-GitHub-Repos.md"},"navPage":[{"title":"介绍","link":"/2024/8/3/flist-introduce/"},{"title":"快速开始","link":"/2024/8/3/flist-fast-start/"},{"title":"使用趁手的工具编辑配置文件","link":"/2024/8/3/flist-edit-config/","items":[{"title":"直接在GitHub上修改","link":"/2024/8/3/flist-online-git-hub/"},{"title":"下载代码本地修改(不推荐)","link":"/2024/8/3/flist-loclhost/"},{"title":"在线IDE编辑器修改(推荐)","link":"/2024/8/3/flist-online-ide/","items":[{"title":"Gitpod","link":"/2024/8/3/flist-online-gitpod/"},{"title":"StackBlitz","link":"/2024/8/3/flist-online-stack-blitz/"}]}]},{"title":"了解配置文件的写法","link":"/2024/8/3/flist-config-wite/","items":[{"title":"基础","link":"/2024/8/3/flist-config-base/"},{"title":"挂载文件","link":"/2024/8/3/flist-config-mount/","items":[{"title":"GitHub Releases","link":"/2024/8/3/flist-config-mount-git-hub-releases/"},{"title":"GitHub Repos","link":"/2024/8/14/flist-config-mount-git-hub-Repos/"},{"title":"Gitee 发行版","link":"/2024/8/6/flist-config-mount-gitee-releases/"},{"title":"Hugging Face Datasets","link":"/2024/8/3/flist-config-mount-hugging-face-fatasets/"},{"title":"URL 下载地址","link":"/2024/8/3/flist-config-mount-down-url/"}]},{"title":"配置代理","link":"/2024/8/3/flist-config-porxy/","items":[{"title":"Cloudflare Pages","link":"/2024/8/3/flist-config-porxy-git-hub-releases/"},{"title":"Vercel","link":"/2024/8/3/flist-config-porxy-vercel/"},{"title":"Netlify","link":"/2024/8/5/flist-config-porxy-netlify/"}]}]},{"title":"部署到自己喜欢的平台","link":"/2024/8/3/flist-deploy/","items":[{"title":"Cloudflare Pages (推荐！功能完整)","link":"/2024/8/3/flist-deploy-cloudflare-pages/"},{"title":"Vercel (推荐！功能完整)","link":"/2024/8/3/flist-deploy-vercel/"},{"title":"Netlify (推荐！功能完整)","link":"/2024/8/5/flist-deploy-netlify/"},{"title":"GitHub Pages","link":"/2024/8/3/flist-deploy-git-hub-pages/"}]},{"title":"深入","link":"/2024/8/16/flist-thorough/","items":[{"title":"下载跨域限制级","link":"/2024/8/16/flist-thorough-cros/"}]}]}');export{y as comp,R as data};
