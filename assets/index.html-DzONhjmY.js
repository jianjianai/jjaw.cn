import{_ as o,r as e,o as c,c as l,b as n,e as a,d as t,a as p}from"./app-CHGq3OoD.js";const u={},i=p('<h1 id="java解析json的三个库的基础用法-gson-fastjson-jackson" tabindex="-1"><a class="header-anchor" href="#java解析json的三个库的基础用法-gson-fastjson-jackson"><span>java解析json的三个库的基础用法,Gson,FastJson,Jackson</span></a></h1><h2 id="三者有何不同" tabindex="-1"><a class="header-anchor" href="#三者有何不同"><span>三者有何不同？</span></a></h2><div class="hint-container tip"><p class="hint-container-title">小提示</p><p>推荐初学者用Fastjson。 Fastjson相较于其他json库，最容易理解，最好上手。</p></div><h3 id="gson" tabindex="-1"><a class="header-anchor" href="#gson"><span>gson</span></a></h3><p>Gson当初是为因应Google公司内部需求而由Google自行研发而来，Gson的应用主要为toJson与fromJson两个转换函数，无依赖，不需要例外额外的jar。</p><h3 id="fastjson" tabindex="-1"><a class="header-anchor" href="#fastjson"><span>Fastjson</span></a></h3><p>Fastjson是一个Java语言编写的高性能的JSON处理器,由阿里巴巴公司开发。无依赖，不需要例外额外的jar，能够直接跑在JDK上。FastJson采用独创的算法，将parse的速度提升到极致，超过所有json库。</p><h3 id="jackson" tabindex="-1"><a class="header-anchor" href="#jackson"><span>Jackson</span></a></h3><p>Jackson是当前用的比较广泛的，用来序列化和反序列化json的Java开源框架。Jackson社区相对比较活跃，更新速度也比较快，Jackson是最流行的json解析器之一，spring默认使用Jackson。</p><h2 id="maven-仓库" tabindex="-1"><a class="header-anchor" href="#maven-仓库"><span>Maven 仓库</span></a></h2>',10),k={href:"https://mvnrepository.com/artifact/com.google.code.gson/gson",target:"_blank",rel:"noopener noreferrer"},r={href:"https://mvnrepository.com/artifact/com.alibaba.fastjson2/fastjson2",target:"_blank",rel:"noopener noreferrer"},d={href:"https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind",target:"_blank",rel:"noopener noreferrer"},j=p(`<h2 id="使用方法" tabindex="-1"><a class="header-anchor" href="#使用方法"><span>使用方法</span></a></h2><h3 id="gson-1" tabindex="-1"><a class="header-anchor" href="#gson-1"><span>gson</span></a></h3><p>使用Gson解析json需要用到一个Gson实例，可以直接这样创建。</p><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token class-name">Gson</span> gson <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Gson</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre></div><p>在Gson中，所有的Json对象都继承于<code>JsonElement</code> ，也就是说，他们都是json元素。 <code>string</code>,<code>number</code>,<code>array</code>,<code>Object</code>都可以是Gson中的<code>JsonElement</code>对象。</p><h4 id="解析json对象" tabindex="-1"><a class="header-anchor" href="#解析json对象"><span>解析json对象</span></a></h4><h4 id="从jsonobject得到对应的值" tabindex="-1"><a class="header-anchor" href="#从jsonobject得到对应的值"><span>从JsonObject得到对应的值</span></a></h4><p>从jsonObject得到对应的值，只需要3步，其他的都是以此类推。</p><h5 id="_1-得到jsonobject" tabindex="-1"><a class="header-anchor" href="#_1-得到jsonobject"><span>1.得到JsonObject</span></a></h5><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token class-name">Gson</span> gson <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Gson</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">String</span> json <span class="token operator">=</span> <span class="token triple-quoted-string string">&quot;&quot;&quot;</span>
<span class="line">        {</span>
<span class="line">            &quot;string1&quot;:&quot;value1&quot;</span>
<span class="line">        }</span>
<span class="line">        &quot;&quot;&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">JsonObject</span> jsonObject <span class="token operator">=</span> gson<span class="token punctuation">.</span><span class="token function">fromJson</span><span class="token punctuation">(</span>json<span class="token punctuation">,</span> <span class="token class-name">JsonObject</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>jsonObject<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre></div><h5 id="_2-得到对应的jsonelement" tabindex="-1"><a class="header-anchor" href="#_2-得到对应的jsonelement"><span>2.得到对应的JsonElement</span></a></h5><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token class-name">JsonElement</span> jsonElement <span class="token operator">=</span> jsonObject<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;string1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>jsonElement<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre></div><h5 id="_3-转换为对应的对象" tabindex="-1"><a class="header-anchor" href="#_3-转换为对应的对象"><span>3.转换为对应的对象</span></a></h5><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token class-name">String</span> string1 <span class="token operator">=</span> jsonElement<span class="token punctuation">.</span><span class="token function">getAsString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>string1<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre></div><h5 id="_4-接下来就是以此类推" tabindex="-1"><a class="header-anchor" href="#_4-接下来就是以此类推"><span>4.接下来就是以此类推</span></a></h5><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token class-name">Gson</span> gson <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Gson</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">String</span> json <span class="token operator">=</span> <span class="token triple-quoted-string string">&quot;&quot;&quot;</span>
<span class="line">{</span>
<span class="line">    &quot;string1&quot;:&quot;value1&quot;,</span>
<span class="line">    &quot;number1&quot;:12,</span>
<span class="line">    &quot;number2&quot;:5.2,</span>
<span class="line">    &quot;object1&quot;:{</span>
<span class="line">        &quot;key&quot;:&quot;value&quot;</span>
<span class="line">    }</span>
<span class="line">}</span>
<span class="line">&quot;&quot;&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">JsonObject</span> jsonObject <span class="token operator">=</span> gson<span class="token punctuation">.</span><span class="token function">fromJson</span><span class="token punctuation">(</span>json<span class="token punctuation">,</span> <span class="token class-name">JsonObject</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">String</span> string1 <span class="token operator">=</span> jsonObject<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;string1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getAsString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">int</span> number1 <span class="token operator">=</span> jsonObject<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;number1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getAsInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">double</span> number2 <span class="token operator">=</span> jsonObject<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;number2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getAsDouble</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">JsonObject</span> object1 <span class="token operator">=</span> jsonObject<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;object1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getAsJsonObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>string1<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>number1<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>number2<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>object1<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre></div><h4 id="解析array对象" tabindex="-1"><a class="header-anchor" href="#解析array对象"><span>解析Array对象</span></a></h4><h5 id="_1-得到jsonarray" tabindex="-1"><a class="header-anchor" href="#_1-得到jsonarray"><span>1.得到JsonArray</span></a></h5><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token class-name">Gson</span> gson <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Gson</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">String</span> array <span class="token operator">=</span> <span class="token triple-quoted-string string">&quot;&quot;&quot;</span>
<span class="line">        [</span>
<span class="line">            1,</span>
<span class="line">            2,</span>
<span class="line">            5</span>
<span class="line">        ]</span>
<span class="line">        &quot;&quot;&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">JsonArray</span> jsonArray <span class="token operator">=</span> gson<span class="token punctuation">.</span><span class="token function">fromJson</span><span class="token punctuation">(</span>array<span class="token punctuation">,</span> <span class="token class-name">JsonArray</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>jsonArray<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre></div><h6 id="_2-得到对应的jsonelement-1" tabindex="-1"><a class="header-anchor" href="#_2-得到对应的jsonelement-1"><span>2.得到对应的JsonElement</span></a></h6><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token class-name">JsonElement</span> jsonElement <span class="token operator">=</span> jsonArray<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//得到下标为0的元素</span></span>
<span class="line"><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>jsonElement<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre></div><h6 id="_3-转换为对应的对象-1" tabindex="-1"><a class="header-anchor" href="#_3-转换为对应的对象-1"><span>3.转换为对应的对象</span></a></h6><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token keyword">int</span> index0 <span class="token operator">=</span> jsonElement<span class="token punctuation">.</span><span class="token function">getAsInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>index0<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre></div><h5 id="_4-接下来就是以此类推-1" tabindex="-1"><a class="header-anchor" href="#_4-接下来就是以此类推-1"><span>4.接下来就是以此类推</span></a></h5><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token class-name">Gson</span> gson <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Gson</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">String</span> array <span class="token operator">=</span> <span class="token triple-quoted-string string">&quot;&quot;&quot;</span>
<span class="line">[</span>
<span class="line">    1,</span>
<span class="line">    {&quot;key&quot;:&quot;value&quot;},</span>
<span class="line">    [&quot;a&quot;,&quot;b&quot;,&quot;c&quot;]</span>
<span class="line">]</span>
<span class="line">&quot;&quot;&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">JsonArray</span> jsonArray <span class="token operator">=</span> gson<span class="token punctuation">.</span><span class="token function">fromJson</span><span class="token punctuation">(</span>array<span class="token punctuation">,</span> <span class="token class-name">JsonArray</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">int</span> index0 <span class="token operator">=</span> jsonArray<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getAsInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">JsonObject</span> index1 <span class="token operator">=</span> jsonArray<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getAsJsonObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">JsonArray</span> index2 <span class="token operator">=</span> jsonArray<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getAsJsonArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>index0<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>index1<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>index2<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre></div><h3 id="fastjson-1" tabindex="-1"><a class="header-anchor" href="#fastjson-1"><span>FastJson</span></a></h3><p>FastJson解析字符串最长用的工具类就是<code>JSON</code>,这是一个接口但是其中有很多静态方法。</p><h4 id="解析json对象-1" tabindex="-1"><a class="header-anchor" href="#解析json对象-1"><span>解析json对象</span></a></h4><h5 id="_1-得到jsonobject对象" tabindex="-1"><a class="header-anchor" href="#_1-得到jsonobject对象"><span>1.得到JSONObject对象</span></a></h5><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token class-name">String</span> json <span class="token operator">=</span> <span class="token triple-quoted-string string">&quot;&quot;&quot;</span>
<span class="line">{</span>
<span class="line">    &quot;string1&quot;:&quot;value1&quot;</span>
<span class="line">}</span>
<span class="line">&quot;&quot;&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">JSONObject</span> jsonObject <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parseObject</span><span class="token punctuation">(</span>json<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>jsonObject<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre></div><h5 id="_2-得到对应的值" tabindex="-1"><a class="header-anchor" href="#_2-得到对应的值"><span>2.得到对应的值</span></a></h5><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token class-name">String</span> string1 <span class="token operator">=</span> jsonObject<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">&quot;string1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>string1<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre></div><h5 id="其他的也是以此类推" tabindex="-1"><a class="header-anchor" href="#其他的也是以此类推"><span>其他的也是以此类推</span></a></h5><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token class-name">String</span> json <span class="token operator">=</span> <span class="token triple-quoted-string string">&quot;&quot;&quot;</span>
<span class="line">{</span>
<span class="line">    &quot;string1&quot;:&quot;value1&quot;,</span>
<span class="line">    &quot;number1&quot;:12,</span>
<span class="line">    &quot;number2&quot;:5.2,</span>
<span class="line">    &quot;object1&quot;:{</span>
<span class="line">        &quot;key&quot;:&quot;value&quot;</span>
<span class="line">    }</span>
<span class="line">}</span>
<span class="line">&quot;&quot;&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">JSONObject</span> jsonObject <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parseObject</span><span class="token punctuation">(</span>json<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">String</span> string1 <span class="token operator">=</span> jsonObject<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">&quot;string1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">int</span> number1 <span class="token operator">=</span> jsonObject<span class="token punctuation">.</span><span class="token function">getIntValue</span><span class="token punctuation">(</span><span class="token string">&quot;number1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">double</span> number2 <span class="token operator">=</span> jsonObject<span class="token punctuation">.</span><span class="token function">getDoubleValue</span><span class="token punctuation">(</span><span class="token string">&quot;number2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">JSONObject</span> jsonObject1 <span class="token operator">=</span> jsonObject<span class="token punctuation">.</span><span class="token function">getJSONObject</span><span class="token punctuation">(</span><span class="token string">&quot;object1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>string1<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>number1<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>number2<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>jsonObject1<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre></div><h4 id="解析array" tabindex="-1"><a class="header-anchor" href="#解析array"><span>解析Array</span></a></h4><h5 id="_1-得到jsonarray-1" tabindex="-1"><a class="header-anchor" href="#_1-得到jsonarray-1"><span>1.得到JsonArray</span></a></h5><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token class-name">String</span> array <span class="token operator">=</span> <span class="token triple-quoted-string string">&quot;&quot;&quot;</span>
<span class="line">[</span>
<span class="line">    1,</span>
<span class="line">    2,</span>
<span class="line">    3</span>
<span class="line">]</span>
<span class="line">&quot;&quot;&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">JSONArray</span> jsonArray <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parseArray</span><span class="token punctuation">(</span>array<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>jsonArray<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre></div><h5 id="_2-得到对应的值-1" tabindex="-1"><a class="header-anchor" href="#_2-得到对应的值-1"><span>2.得到对应的值</span></a></h5><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token keyword">int</span> index0 <span class="token operator">=</span> jsonArray<span class="token punctuation">.</span><span class="token function">getIntValue</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>index0<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre></div><h5 id="_3-其他的也是以此类推" tabindex="-1"><a class="header-anchor" href="#_3-其他的也是以此类推"><span>3.其他的也是以此类推</span></a></h5><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line">    <span class="token class-name">String</span> array <span class="token operator">=</span> <span class="token triple-quoted-string string">&quot;&quot;&quot;</span>
<span class="line">    [</span>
<span class="line">        1,</span>
<span class="line">        {&quot;key&quot;:&quot;value&quot;},</span>
<span class="line">        [&quot;a&quot;,&quot;b&quot;,&quot;c&quot;]</span>
<span class="line">    ]</span>
<span class="line">    &quot;&quot;&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">JSONArray</span> jsonArray <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parseArray</span><span class="token punctuation">(</span>array<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">int</span> index0 <span class="token operator">=</span> jsonArray<span class="token punctuation">.</span><span class="token function">getIntValue</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">JSONObject</span> index1 <span class="token operator">=</span> jsonArray<span class="token punctuation">.</span><span class="token function">getJSONObject</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">JSONArray</span> index2 <span class="token operator">=</span> jsonArray<span class="token punctuation">.</span><span class="token function">getJSONArray</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>index0<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>index1<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>index2<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre></div><h3 id="jackson-1" tabindex="-1"><a class="header-anchor" href="#jackson-1"><span>Jackson</span></a></h3><p>在Jackson中，所有的json元素都是<code>JsonNode</code>,使用这个接口就够用了。</p><p>jackson解析json需要用到一个<code>ObjectMapper</code>实例，可以直接这样创建</p><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token class-name">ObjectMapper</span> objectMapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ObjectMapper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre></div><h4 id="解析json对象-2" tabindex="-1"><a class="header-anchor" href="#解析json对象-2"><span>解析json对象</span></a></h4><h5 id="_1-得到jsonnode" tabindex="-1"><a class="header-anchor" href="#_1-得到jsonnode"><span>1.得到JsonNode</span></a></h5><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token class-name">ObjectMapper</span> objectMapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ObjectMapper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">String</span> json <span class="token operator">=</span> <span class="token triple-quoted-string string">&quot;&quot;&quot;</span>
<span class="line">{</span>
<span class="line">    &quot;string1&quot;:&quot;value1&quot;</span>
<span class="line">}</span>
<span class="line">&quot;&quot;&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">ObjectNode</span> objectNode <span class="token operator">=</span> objectMapper<span class="token punctuation">.</span><span class="token function">readValue</span><span class="token punctuation">(</span>json<span class="token punctuation">,</span><span class="token class-name">ObjectNode</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>objectNode<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre></div><h5 id="_2-得到对应的jsonnode" tabindex="-1"><a class="header-anchor" href="#_2-得到对应的jsonnode"><span>2.得到对应的JsonNode</span></a></h5><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token class-name">JsonNode</span> jsonNode <span class="token operator">=</span> objectNode<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;string1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>jsonNode<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre></div><h5 id="_3-得到对应的值" tabindex="-1"><a class="header-anchor" href="#_3-得到对应的值"><span>3.得到对应的值</span></a></h5><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token class-name">String</span> string1 <span class="token operator">=</span> jsonNode<span class="token punctuation">.</span><span class="token function">asText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>string1<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre></div><h5 id="_4-其他也是以此类推" tabindex="-1"><a class="header-anchor" href="#_4-其他也是以此类推"><span>4.其他也是以此类推</span></a></h5><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token class-name">ObjectMapper</span> objectMapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ObjectMapper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">String</span> json <span class="token operator">=</span> <span class="token triple-quoted-string string">&quot;&quot;&quot;</span>
<span class="line">{</span>
<span class="line">    &quot;string1&quot;:&quot;value1&quot;,</span>
<span class="line">    &quot;number1&quot;:12,</span>
<span class="line">    &quot;number2&quot;:5.2,</span>
<span class="line">    &quot;object1&quot;:{</span>
<span class="line">        &quot;key&quot;:&quot;value&quot;</span>
<span class="line">    }</span>
<span class="line">}</span>
<span class="line">&quot;&quot;&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">JsonNode</span> objectNode <span class="token operator">=</span> objectMapper<span class="token punctuation">.</span><span class="token function">readValue</span><span class="token punctuation">(</span>json<span class="token punctuation">,</span><span class="token class-name">JsonNode</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">String</span> string1 <span class="token operator">=</span> objectNode<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;string1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">asText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">int</span> number1 <span class="token operator">=</span> objectNode<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;number1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">asInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">double</span> number2 <span class="token operator">=</span> objectNode<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;number2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">asDouble</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">JsonNode</span> objectNode1 <span class="token operator">=</span> objectNode<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;object1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>string1<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>number1<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>number2<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>objectNode1<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre></div><h4 id="解析array-1" tabindex="-1"><a class="header-anchor" href="#解析array-1"><span>解析Array</span></a></h4><p>array也和json对象一样用JsonNode的方式解析。</p><h5 id="_1-得到jsonnode-1" tabindex="-1"><a class="header-anchor" href="#_1-得到jsonnode-1"><span>1.得到JsonNode</span></a></h5><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token class-name">ObjectMapper</span> objectMapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ObjectMapper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">String</span> array <span class="token operator">=</span> <span class="token triple-quoted-string string">&quot;&quot;&quot;</span>
<span class="line">[</span>
<span class="line">    1,</span>
<span class="line">    2,</span>
<span class="line">    3</span>
<span class="line">]</span>
<span class="line">&quot;&quot;&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">JsonNode</span> objectNode <span class="token operator">=</span> objectMapper<span class="token punctuation">.</span><span class="token function">readValue</span><span class="token punctuation">(</span>array<span class="token punctuation">,</span><span class="token class-name">JsonNode</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre></div><h5 id="_2-得到对应的jsonnode-1" tabindex="-1"><a class="header-anchor" href="#_2-得到对应的jsonnode-1"><span>2.得到对应的JsonNode</span></a></h5><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token class-name">JsonNode</span> index1Node <span class="token operator">=</span> objectNode<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>index1Node<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre></div><h5 id="_3-得到对应的值-1" tabindex="-1"><a class="header-anchor" href="#_3-得到对应的值-1"><span>3.得到对应的值</span></a></h5><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token keyword">int</span> index1 <span class="token operator">=</span> index1Node<span class="token punctuation">.</span><span class="token function">asInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>index1<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre></div><h5 id="_4-其他也是以此类推-1" tabindex="-1"><a class="header-anchor" href="#_4-其他也是以此类推-1"><span>4.其他也是以此类推</span></a></h5><div class="language-java" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token class-name">ObjectMapper</span> objectMapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ObjectMapper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">String</span> array <span class="token operator">=</span> <span class="token triple-quoted-string string">&quot;&quot;&quot;</span>
<span class="line">[</span>
<span class="line">    1,</span>
<span class="line">    {&quot;key&quot;:&quot;value&quot;},</span>
<span class="line">    [&quot;a&quot;,&quot;b&quot;,&quot;c&quot;]</span>
<span class="line">]</span>
<span class="line">&quot;&quot;&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">JsonNode</span> objectNode <span class="token operator">=</span> objectMapper<span class="token punctuation">.</span><span class="token function">readValue</span><span class="token punctuation">(</span>array<span class="token punctuation">,</span><span class="token class-name">JsonNode</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">int</span> index0 <span class="token operator">=</span> objectNode<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">asInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">JsonNode</span> index1 <span class="token operator">=</span> objectNode<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">JsonNode</span> index2 <span class="token operator">=</span> objectNode<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>index0<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>index1<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>index2<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre></div><h3 id="怎么转换成字符串" tabindex="-1"><a class="header-anchor" href="#怎么转换成字符串"><span>怎么转换成字符串？</span></a></h3><p>对应的对象toString()一下就ok可以了。</p>`,66);function g(h,m){const s=e("ExternalLinkIcon");return c(),l("div",null,[i,n("ul",null,[n("li",null,[n("a",k,[a("gson"),t(s)])]),n("li",null,[n("a",r,[a("FastJson"),t(s)])]),n("li",null,[n("a",d,[a("Jackson"),t(s)])])]),j])}const q=o(u,[["render",g],["__file","index.html.vue"]]),b=JSON.parse('{"path":"/2024/3/5/java-json/","title":"Java JSON解析全攻略：Gson、FastJson与Jackson实用入门","lang":"zh-CN","frontmatter":{"permalinkPattern":"2024/3/5/java-json/","title":"Java JSON解析全攻略：Gson、FastJson与Jackson实用入门","description":"探索Java中流行的JSON解析库：Gson、FastJson和Jackson。本文深入比较这三个库的特点，并提供了它们基础使用方法的详细指南，让您随时应对各种JSON处理需求。","tags":["后端"],"star":true,"comment":true,"head":[["meta",{"property":"og:url","content":"https://jjaw.cn/2024/3/5/java-json/"}],["meta",{"property":"og:site_name","content":"神奇小破站"}],["meta",{"property":"og:title","content":"Java JSON解析全攻略：Gson、FastJson与Jackson实用入门"}],["meta",{"property":"og:description","content":"探索Java中流行的JSON解析库：Gson、FastJson和Jackson。本文深入比较这三个库的特点，并提供了它们基础使用方法的详细指南，让您随时应对各种JSON处理需求。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-06T09:37:52.000Z"}],["meta",{"property":"article:tag","content":"后端"}],["meta",{"property":"article:modified_time","content":"2024-05-06T09:37:52.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Java JSON解析全攻略：Gson、FastJson与Jackson实用入门\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-05-06T09:37:52.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"三者有何不同？","slug":"三者有何不同","link":"#三者有何不同","children":[{"level":3,"title":"gson","slug":"gson","link":"#gson","children":[]},{"level":3,"title":"Fastjson","slug":"fastjson","link":"#fastjson","children":[]},{"level":3,"title":"Jackson","slug":"jackson","link":"#jackson","children":[]}]},{"level":2,"title":"Maven 仓库","slug":"maven-仓库","link":"#maven-仓库","children":[]},{"level":2,"title":"使用方法","slug":"使用方法","link":"#使用方法","children":[{"level":3,"title":"gson","slug":"gson-1","link":"#gson-1","children":[]},{"level":3,"title":"FastJson","slug":"fastjson-1","link":"#fastjson-1","children":[]},{"level":3,"title":"Jackson","slug":"jackson-1","link":"#jackson-1","children":[]},{"level":3,"title":"怎么转换成字符串？","slug":"怎么转换成字符串","link":"#怎么转换成字符串","children":[]}]}],"git":{"isRoot":true,"createdTime":1710248195000,"updatedTime":1714988272000,"contributors":[{"name":"jjaw","email":"jjaw@jjaw.cn","commits":2}]},"excerpt":"\\n<h2>三者有何不同？</h2>\\n<div class=\\"hint-container tip\\">\\n<p class=\\"hint-container-title\\">小提示</p>\\n<p>推荐初学者用Fastjson。\\nFastjson相较于其他json库，最容易理解，最好上手。</p>\\n</div>\\n<h3>gson</h3>\\n<p>Gson当初是为因应Google公司内部需求而由Google自行研发而来，Gson的应用主要为toJson与fromJson两个转换函数，无依赖，不需要例外额外的jar。</p>\\n<h3>Fastjson</h3>\\n<p>Fastjson是一个Java语言编写的高性能的JSON处理器,由阿里巴巴公司开发。无依赖，不需要例外额外的jar，能够直接跑在JDK上。FastJson采用独创的算法，将parse的速度提升到极致，超过所有json库。</p>","github_edit":{"fileGitUrl":"https://github.com/jianjianai/jjaw.cn/edit/master/articles/7-java与json/Java与json.md"}}');export{q as comp,b as data};
