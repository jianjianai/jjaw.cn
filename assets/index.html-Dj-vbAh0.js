import{_ as U,f as c,g as m,r as w,o as C,c as z,d as o,w as i,e as n,a as r,b as s,n as h,t as u,h as y,v as k,i as D}from"./app-D0VI1FnG.js";const p="/assets/%E5%8E%9F%E7%A5%9E-bwG8u9YC.webp",M={__name:"index.html",setup(V,{expose:a}){a();const f=c("absolute"),t=c("left"),g=c("1px"),v=c("top"),d=c("1px"),l=m(()=>`position: ${f.value};
    ${t.value}:${g.value};
    ${v.value}:${d.value};`),e=m(()=>`img.ys{
    ${l.value}
}`),x=c("relative"),b=c("12px"),_=m(()=>`position:${x.value};
    top:${b.value};`),E=m(()=>`img.ys{
    ${_.value}
}`),N=c(!0),S=c(!0),T=c("1px"),B=c("1px"),j={test1p:f,test1x:t,test1xin:g,test1y:v,test1yin:d,test1style:l,test1code:e,test2p:x,test2y:b,test2style:_,test2code:E,test3ap:N,test3bp:S,test4x:T,test4y:B,ref:c,computed:m};return Object.defineProperty(j,"__isScriptSetup",{enumerable:!1,value:!0}),j}},A=r('<h1 id="原神启动-css动画详解。" tabindex="-1"><a class="header-anchor" href="#原神启动-css动画详解。"><span>原神启动!!! css动画详解。</span></a></h1><h2 id="前情" tabindex="-1"><a class="header-anchor" href="#前情"><span>前情</span></a></h2><p>最近原神启动非常火，突然有一天我想随时随地原神启动。就想能不能用网页做一个原神启动呢？ 有想法就要立即去做，于是很轻松这个效果就做好了。但是原神启动之后应该跳转到哪呢？ 思考了很久，觉得那就跳转到一个教程页面吧，让大家都可以自己动手原神启动一下岂不是很完美？</p><h2 id="条件" tabindex="-1"><a class="header-anchor" href="#条件"><span>条件</span></a></h2><p>这个教程非常基础，很适合初学者，但是还是需要一些基础知识。</p><ul><li>html class(类) 的用法。</li><li>css 选择器 的用法和一些简单的属性。</li></ul><h2 id="基础知识" tabindex="-1"><a class="header-anchor" href="#基础知识"><span>基础知识</span></a></h2><h3 id="了解position的三个属性和常见的搭配" tabindex="-1"><a class="header-anchor" href="#了解position的三个属性和常见的搭配"><span>了解<code>position</code>的三个属性和常见的搭配</span></a></h3><p><code>position</code> 通常需要和 <code>top</code>,<code>bottom</code> ,<code>left</code>,<code>right</code> 这四个属性配合起来一起使用。</p><ul><li><code>top</code> 代表当前元素上方的距离。</li><li><code>bottom</code> 代表当前元素下方的距离。</li><li><code>left</code>,<code>right</code> 以此类推，分别代表左边和右边。</li></ul><div class="hint-container tip"><p class="hint-container-title">小知识</p><p>通常，在使用<code>top</code>时不使用<code>bottom</code>,在使用<code>left</code>时不使用<code>right</code>。</p></div>',11),Z=r('<h4 id="fixed" tabindex="-1"><a class="header-anchor" href="#fixed"><span>fixed</span></a></h4><p>将 <code>position</code> 设为 <code>fixed</code> 则会相对于当前网页的窗口进行定位。<code>top</code>则表示从网页窗口的最上面到当前元素的距离。 <code>left</code>则代表从网页窗口的最左边到当前元素的距离。<code>bottom</code>,<code>right</code> 以此类推，分别代表最下方和最右方。</p>',2),F={class:"try1div"},G={style:{position:"relative",flex:"1",border:"0.1rem solid var(--color)","min-height":"5rem"}},O={style:{flex:"1",margin:"0"}},P={style:{flex:"1"}},J=s("br",null,null,-1),R=s("br",null,null,-1),Y=r('<h4 id="relative" tabindex="-1"><a class="header-anchor" href="#relative"><span>relative</span></a></h4><p>将 <code>position</code> 设为 <code>relative</code> 则会相对于当前位置进行定位。<code>top</code>则表示向下便宜的距离。 <code>left</code>则代表向右便宜的距离。<code>bottom</code>,<code>right</code> 以此类推，分别代表向上偏移和向左偏移。</p><div class="hint-container tip"><p class="hint-container-title">小知识</p><p>将 <code>position</code> 设为 <code>relative</code> 后，元素位置偏移后，依然会占有原来的位置。</p></div>',3),q={class:"try1div"},H={style:{border:"0.1rem solid var(--color)",flex:"1","min-height":"5rem",position:"relative"}},I=s("p",null,"yyds!",-1),K=s("p",null,"yyds!",-1),L={style:{flex:"1",margin:"0"}},Q={style:{flex:"1"}},W=s("br",null,null,-1),X=r('<h4 id="absolute" tabindex="-1"><a class="header-anchor" href="#absolute"><span>absolute</span></a></h4><p>将 <code>position</code> 设为 <code>absolute</code> 则会相对于祖宗设置为 <code>relative</code> 的元素进行定位,如果没有符合条件的祖宗元素则会相对于整个网页进行定位。<code>top</code>则表示从这个元素的最上面到当前元素的距离。 <code>left</code>则代表从这个的最左边到当前元素的距离。<code>bottom</code>,<code>right</code> 以此类推，分别代表最下方和最右方。</p>',2),$={class:"try1div"},ss=s("img",{class:"ys",style:{height:"2rem","z-index":"100",position:"absolute",top:"10px",left:"10px"},src:p},null,-1),ns={style:{flex:"1",margin:"0"}},ts={key:0},as=r('<h3 id="了解transform中的translate-x-y" tabindex="-1"><a class="header-anchor" href="#了解transform中的translate-x-y"><span>了解<code>transform</code>中的<code>translate(x,y)</code></span></a></h3><p><code>transform</code>中的<code>translate(x,y)</code>和<code>position</code>使用<code>relative</code>时很相似，都是相对于自己当前位置进行偏移,<code>x</code>和<code>left</code>的用法很相似,<code>y</code>和<code>top</code>的用法很相似。</p>',2),es={class:"try1div"},os={style:{border:"0.1rem solid var(--color)",flex:"1","min-height":"5rem"}},is={style:{flex:"1",margin:"0"}},ls={style:{flex:"1"}},ps=s("br",null,null,-1),cs=r('<h2 id="完美的的居中" tabindex="-1"><a class="header-anchor" href="#完美的的居中"><span>完美的的居中</span></a></h2><p>要实现元素启动动画,首先要了解如何使用css将图片居中显示。 下面将介绍几种将图片完美居中的几种方式。</p><h3 id="左右居中" tabindex="-1"><a class="header-anchor" href="#左右居中"><span>左右居中</span></a></h3><h4 id="方式一-使用margin-auto" tabindex="-1"><a class="header-anchor" href="#方式一-使用margin-auto"><span>方式一，使用<code>margin: auto;</code></span></a></h4><p>给元素设置 <code>margin: auto;</code> 即可相对父元素左右居中。</p><div class="hint-container important"><p class="hint-container-title">注意</p><p>元素仅在 <code>display: block;</code> 时 <code>margin: auto;</code> 才会将元素相对于父元素左右居中。 <code>&lt;img&gt;</code> 标签默认值为<code>display: inline-block; </code>所以不会生效，需要指定<code>display: block;</code>才能居中。</p></div>',6),rs=s("div",{class:"try1div"},[s("div",{style:{border:"0.1rem solid var(--color)",flex:"2","min-height":"5rem"}},[s("img",{class:"ys",style:{height:"3rem",margin:"auto",display:"block"},src:p})]),s("pre",{style:{flex:"1",margin:"0"}},`img.ys{
    display: block;
    margin: auto;
}`)],-1),ds=r('<h4 id="方式二-position-absolute-left-50-transform-translate-50-0" tabindex="-1"><a class="header-anchor" href="#方式二-position-absolute-left-50-transform-translate-50-0"><span>方式二，<code>position:absolute;</code> + <code>left:50%;</code>+ <code>transform:translate(-50%,0);</code></span></a></h4><ol><li>给需要相对于居中的祖宗元素设置<code>position: relative;</code></li><li>使用<code>position:absolute;</code>相较于父元素进行定位。</li><li>使用<code>left:50%</code>向右平移相对于定位元素宽的50%</li></ol>',2),us=s("div",{class:"try1div"},[s("div",{style:{border:"0.1rem solid var(--color)",flex:"2","min-height":"5rem",position:"relative"}},[s("img",{class:"ys",style:{height:"3rem",position:"absolute",left:"50%"},src:p})]),s("pre",{style:{flex:"1",margin:"0"}},`img.ys{
    position: absolute;
    left: 50%;
}`)],-1),ms=s("ol",{start:"4"},[s("li",null,[n("使用"),s("code",null,"transform:translate(-50%,0);"),n("向左平移自己的50%。")])],-1),hs=s("div",{class:"try1div"},[s("div",{style:{border:"0.1rem solid var(--color)",flex:"2","min-height":"5rem",position:"relative"}},[s("img",{class:"ys",style:{height:"3rem",position:"absolute",left:"50%",transform:"translate(-50%,0)"},src:p})]),s("pre",{style:{flex:"1",margin:"0"}},`img.ys{
    position: absolute;
    left: 50%;
    transform:translate(-50%,0);
}`)],-1),ys=r('<div class="hint-container tip"><p class="hint-container-title">小知识</p><ul><li><code>left:50%;</code> 是相较于定位的元素的宽度的50%。</li><li><code>transform:translate(50%,0);</code> 是自身宽度的50%。</li></ul><p>两者的百分比参考对象是不同的。利用这些特性也可以完美居中。</p></div><h3 id="上下居中" tabindex="-1"><a class="header-anchor" href="#上下居中"><span>上下居中</span></a></h3><h4 id="方式-position-absolute-top-50-transform-translate-0-50" tabindex="-1"><a class="header-anchor" href="#方式-position-absolute-top-50-transform-translate-0-50"><span>方式 <code>position:absolute;</code> + <code>top:50%;</code>+ <code>transform:translate(0,-50%);</code></span></a></h4><p>和<a href="#%E6%96%B9%E5%BC%8F%E4%BA%8C-position-absolute-left-50-transform-translate-50-0">左右居中的方式二</a>同理， 所以不用多解释了吧，直接上代码！</p>',4),ks=s("div",{style:{border:"0.1rem solid var(--color)",flex:"2","min-height":"8rem",position:"relative"}},[s("img",{class:"ys",style:{height:"3rem",position:"absolute",top:"50%",transform:"translate(0,-50%)"},src:p})],-1),fs=s("div",{class:"language-css","data-highlighter":"prismjs","data-ext":"css","data-title":"css"},[s("pre",{class:"language-css"},[s("code",null,[s("span",{class:"line"},[s("span",{class:"token selector"},"img.ys"),s("span",{class:"token punctuation"},"{")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token property"},"position"),s("span",{class:"token punctuation"},":"),n(" absolute"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token property"},"top"),s("span",{class:"token punctuation"},":"),n(" 50%"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token property"},"transform"),s("span",{class:"token punctuation"},":"),s("span",{class:"token function"},"translate"),s("span",{class:"token punctuation"},"("),n("0"),s("span",{class:"token punctuation"},","),n("-50%"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token punctuation"},"}")]),n(`
`),s("span",{class:"line"})])])],-1),gs=s("h3",{id:"结合起来上下左右居中",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#结合起来上下左右居中"},[s("span",null,"结合起来上下左右居中")])],-1),vs=s("div",{style:{border:"0.1rem solid var(--color)",flex:"2","min-height":"8rem",position:"relative"}},[s("img",{class:"ys",style:{height:"3rem",position:"absolute",left:"50%",top:"50%",transform:"translate(-50%,-50%)"},src:p})],-1),xs=s("div",{class:"language-css","data-highlighter":"prismjs","data-ext":"css","data-title":"css"},[s("pre",{class:"language-css"},[s("code",null,[s("span",{class:"line"},[s("span",{class:"token selector"},"img.ys"),s("span",{class:"token punctuation"},"{")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token property"},"position"),s("span",{class:"token punctuation"},":"),n(" absolute"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token property"},"left"),s("span",{class:"token punctuation"},":"),n(" 50%"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token property"},"top"),s("span",{class:"token punctuation"},":"),n(" 50%"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token property"},"transform"),s("span",{class:"token punctuation"},":"),s("span",{class:"token function"},"translate"),s("span",{class:"token punctuation"},"("),n("-50%"),s("span",{class:"token punctuation"},","),n("-50%"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token punctuation"},"}")]),n(`
`),s("span",{class:"line"})])])],-1),bs=r('<h2 id="原神启动还缺少点灵魂-动画" tabindex="-1"><a class="header-anchor" href="#原神启动还缺少点灵魂-动画"><span>原神启动还缺少点灵魂 “动画”</span></a></h2><div class="dorkd-title"><div class="hint-container tip"><p class="hint-container-title">warning</p><p>接下来建议关闭深色模式浏览，虽然此页面已经对深色模式进行了适配，但是使用深色模式原神启动总感觉缺少点味道，不够还原。 为了最好的观看体验，建议关闭深色模式观看。</p></div></div><p>已经利用之前的知识将 “原神” 居中了。看起来已经有点那个味道了。接下来将添加动画，为它注入灵魂。 使用 <code>animation</code> 属性来为图片设置动画。使用 <code>@keyframes</code> 来定义动画。</p>',3),_s=s("div",{style:{border:"0.1rem solid var(--color)","min-height":"24rem",position:"relative"}},[s("img",{class:"ys",style:{height:"10rem",position:"absolute",left:"50%",top:"50%",transform:"translate(-50%,-50%)"},src:p})],-1),js=r(`<h3 id="了解-keyframes" tabindex="-1"><a class="header-anchor" href="#了解-keyframes"><span>了解<code>@keyframes</code></span></a></h3><p><code>@keyframes</code> 用于定义动画的关键帧,关键帧可以在不同的css属性之间过渡。</p><p>最简单的用法,定义一个<code>ysstart</code>动画,使不透明的从100%降到0%</p><div class="language-css" data-highlighter="prismjs" data-ext="css" data-title="css"><pre class="language-css"><code><span class="line"><span class="token atrule"><span class="token rule">@keyframes</span> ysstart</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token selector">from</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token property">opacity</span><span class="token punctuation">:</span>100%</span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token selector">to</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token property">opacity</span><span class="token punctuation">:</span>0%</span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div><p>或者可以这样写。</p><div class="language-css" data-highlighter="prismjs" data-ext="css" data-title="css"><pre class="language-css"><code><span class="line"><span class="token atrule"><span class="token rule">@keyframes</span> ysstart</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token selector">0%</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token property">opacity</span><span class="token punctuation">:</span>100%</span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token selector">100%</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token property">opacity</span><span class="token punctuation">:</span>0%</span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div><div class="hint-container tip"><p class="hint-container-title">推荐</p><p>我更推荐使用百分比写法,这种写法更加自由。</p></div><h3 id="了解-animation" tabindex="-1"><a class="header-anchor" href="#了解-animation"><span>了解 <code>animation</code></span></a></h3><p><code>animation</code>有许多属性，这里只介绍我们用到的。</p><ul><li><code>animation-name</code> 指定由@keyframes描述的关键帧名称。</li><li><code>animation-duration</code> 设置动画一个周期的时长。</li><li><code>animation-iteration-count</code> 设置动画重复次数，可以指定 infinite 无限次重复动画</li><li><code>animation-timing-function</code> 设置动画速度，即通过建立加速度曲线，设置动画在关键帧之间是如何变化。</li></ul><p>例如</p><div class="language-css" data-highlighter="prismjs" data-ext="css" data-title="css"><pre class="language-css"><code><span class="line"><span class="token selector">img.ys</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">animation-name</span><span class="token punctuation">:</span>ysstart<span class="token punctuation">;</span> <span class="token comment">/* ysstart 是动画的名称 */</span></span>
<span class="line">    <span class="token property">animation-duration</span><span class="token punctuation">:</span> 3s<span class="token punctuation">;</span> <span class="token comment">/* 动画共持续3秒 */</span></span>
<span class="line">    <span class="token property">animation-iteration-count</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span> <span class="token comment">/* 动画只播放1次 */</span></span>
<span class="line">    <span class="token property">animation-timing-function</span><span class="token punctuation">:</span> linear<span class="token punctuation">;</span> <span class="token comment">/* 匀速播放 */</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div><p>或者可以缩写</p><div class="language-css" data-highlighter="prismjs" data-ext="css" data-title="css"><pre class="language-css"><code><span class="line"><span class="token selector">img.ys</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">animation</span><span class="token punctuation">:</span>ysstart 3s 1 linear<span class="token punctuation">;</span> </span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div><div class="hint-container tip"><p class="hint-container-title">小知识</p><p>缩写可以不按照顺序书写,例如这样也是对的。</p><div class="language-css" data-highlighter="prismjs" data-ext="css" data-title="css"><pre class="language-css"><code><span class="line"><span class="token selector">img.ys</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">animation</span><span class="token punctuation">:</span>linear 1 ysstart 3s<span class="token punctuation">;</span> </span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div></div><h3 id="将两者集合-开始注入灵魂" tabindex="-1"><a class="header-anchor" href="#将两者集合-开始注入灵魂"><span>将两者集合,开始注入灵魂</span></a></h3><p>将之前用<code>@keyframes</code>定义的关键帧和<code>animation</code>集合。这样就实现了不透明度从100%到0%的渐变效果。</p>`,17),ws=s("div",{style:{border:"0.1rem solid var(--color)","min-height":"24rem",position:"relative"}},[s("img",{class:"ys ys-d1",style:{height:"10rem",position:"absolute",left:"50%",top:"50%",transform:"translate(-50%,-50%)"},src:p})],-1),Cs=r(`<div class="language-css" data-highlighter="prismjs" data-ext="css" data-title="css"><pre class="language-css"><code><span class="line"><span class="token atrule"><span class="token rule">@keyframes</span> ysstart</span><span class="token punctuation">{</span> <span class="token comment">/* 定义 ysstart 动画关键帧 */</span></span>
<span class="line">    <span class="token selector">0%</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token property">opacity</span><span class="token punctuation">:</span>100%<span class="token punctuation">;</span> <span class="token comment">/* 不透明度100% */</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token selector">100%</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token property">opacity</span><span class="token punctuation">:</span>0%<span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token selector">img.ys</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">animation-name</span><span class="token punctuation">:</span>ysstart<span class="token punctuation">;</span> <span class="token comment">/* ysstart 是动画的名称 */</span></span>
<span class="line">    <span class="token property">animation-duration</span><span class="token punctuation">:</span> 3s<span class="token punctuation">;</span> <span class="token comment">/* 动画共持续3秒 */</span></span>
<span class="line">    <span class="token property">animation-iteration-count</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span> <span class="token comment">/* 动画一直重复播放 */</span></span>
<span class="line">    <span class="token property">animation-timing-function</span><span class="token punctuation">:</span> linear<span class="token punctuation">;</span> <span class="token comment">/* 匀速播放 */</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div><p>接下来,简单修改一下,将持续时间增加到6秒,再添加一个淡出的过程。是不是就很有感觉了？</p>`,2),zs=s("div",{style:{border:"0.1rem solid var(--color)","min-height":"24rem",position:"relative"}},[s("img",{class:"ys ys-d2",style:{height:"10rem",position:"absolute",left:"50%",top:"50%",transform:"translate(-50%,-50%)"},src:p})],-1),Vs=r(`<div class="language-css" data-highlighter="prismjs" data-ext="css" data-title="css"><pre class="language-css"><code><span class="line"><span class="token atrule"><span class="token rule">@keyframes</span> ysstart</span><span class="token punctuation">{</span> </span>
<span class="line">    <span class="token selector">0%</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token property">opacity</span><span class="token punctuation">:</span>0%<span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token selector">50%</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token property">opacity</span><span class="token punctuation">:</span>100%<span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token selector">100%</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token property">opacity</span><span class="token punctuation">:</span>0%<span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token selector">img.ys-d2</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">animation-name</span><span class="token punctuation">:</span>ysstart<span class="token punctuation">;</span> </span>
<span class="line">    <span class="token property">animation-duration</span><span class="token punctuation">:</span> 6s<span class="token punctuation">;</span> </span>
<span class="line">    <span class="token property">animation-iteration-count</span><span class="token punctuation">:</span> infinite<span class="token punctuation">;</span> </span>
<span class="line">    <span class="token property">animation-timing-function</span><span class="token punctuation">:</span> linear<span class="token punctuation">;</span> </span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div><div class="start-main"><img class="yuanimg" src="`+p+'"><div class="yuantext"><p>抵制不良游戏，拒绝盗版游戏。注意自我保护，谨防受骗上当。适度游戏益脑，沉迷游戏伤身。合理安排时间，享受健康生活。</p><p>此界面仅用于学习和交流</p></div></div>',2),Es=s("pre",null,[s("code",null,`    10% {
        opacity: 0%;
    }

    45% {
        opacity: 100%;
    }

    70% {
        opacity: 100%;
    }

    90% {
        opacity: 0%;
    }

    100% {
        opacity: 0%;
    }
`)],-1),Ns=s("p",null,"} @keyframes yuanimg-animation { 0% { opacity: 0%; }",-1),Ss=s("pre",null,[s("code",null,`    45% {
        opacity: 100%;
    }

    70% {
        opacity: 100%;
    }

    90% {
        opacity: 0%;
    }

    100% {
        opacity: 0%;
    }
`)],-1),Ts=s("p",null,"} @keyframes start-main-animation { 0% { opacity: 100%; z-index: 100; }",-1),Bs=s("pre",null,[s("code",null,`    90% {
        opacity: 100%;
    }

    100% {
        opacity: 0%;
        z-index: 100;
    }
`)],-1),Us=s("p",null,"} @media (prefers-color-scheme: dark) { .yuanimg{ filter: invert(1); background-color: #ffffff00; } .start-main { background-color: black; } }",-1);function Ds(V,a,f,t,g,v){const d=w("MdStyle"),l=w("Demo");return C(),z("div",null,[A,o(d,null,{default:i(()=>[n(" .dorkd-title{ display: none; } .try1div { display: flex; flex-direction: row; align-items: stretch; } @media (max-width:550px) { .try1div { flex-direction: column; } } @media (prefers-color-scheme: dark) { img.ys{ filter: invert(1); background-color: #ffffff00; } .dorkd-title{ display: block; } } ")]),_:1}),Z,o(l,{title:"试一试"},{default:i(()=>[s("div",F,[s("div",G,[s("img",{class:"ys",style:h([{height:"2rem","z-index":"100"},t.test1style]),src:p},null,4)]),s("pre",O,u(t.test1code),1),s("div",P,[n(" 左右 "),s("button",{onClick:a[0]||(a[0]=e=>t.test1x="left")},"left"),n(),s("button",{onClick:a[1]||(a[1]=e=>t.test1x="right")},"right"),y(s("input",{type:"text","onUpdate:modelValue":a[2]||(a[2]=e=>t.test1xin=e)},null,512),[[k,t.test1xin]]),J,n(" 上下 "),s("button",{onClick:a[3]||(a[3]=e=>t.test1y="top")},"top"),n(),s("button",{onClick:a[4]||(a[4]=e=>t.test1y="bottom")},"bottom"),y(s("input",{type:"text","onUpdate:modelValue":a[5]||(a[5]=e=>t.test1yin=e)},null,512),[[k,t.test1yin]]),R,n(" 定位 "),s("button",{onClick:a[6]||(a[6]=e=>t.test1p="fixed")},"fixed"),n(),s("button",{onClick:a[7]||(a[7]=e=>t.test1p="relative")},"relative"),s("button",{onClick:a[8]||(a[8]=e=>t.test1p="absolute")},"absolute")])])]),_:1}),Y,o(l,{title:"试一试"},{default:i(()=>[s("div",q,[s("div",H,[I,s("p",null,[n("绝了！"),s("img",{class:"ys",style:h([{height:"2rem","z-index":"100"},t.test2style]),src:p},null,4),n("启动！")]),K]),s("pre",L,u(t.test2code),1),s("div",Q,[n(" 偏移 "),s("button",{onClick:a[9]||(a[9]=e=>t.test2y="0px")},"0px"),n(),s("button",{onClick:a[10]||(a[10]=e=>t.test2y="12px")},"12px"),n(),s("button",{onClick:a[11]||(a[11]=e=>t.test2y="30px")},"30px"),n(),s("button",{onClick:a[12]||(a[12]=e=>t.test2y="60px")},"60px"),W,n(" 定位 "),s("button",{onClick:a[13]||(a[13]=e=>t.test2p="fixed")},"fixed"),n(),s("button",{onClick:a[14]||(a[14]=e=>t.test2p="relative")},"relative"),n(),s("button",{onClick:a[15]||(a[15]=e=>t.test2p="absolute")},"absolute")])])]),_:1}),X,o(l,{title:"试一试"},{default:i(()=>[s("div",$,[s("div",{style:h([{border:"0.1rem solid var(--color)",flex:"2","min-height":"8rem"},t.test3ap?"position: relative;":""])},[n("a "),s("div",{style:h([{border:"0.1rem solid var(--color)","min-height":"4rem",width:"70%"},t.test3bp?"position: relative;":""])},[n("b "),ss],4)],4),s("pre",ns,"div.a"+u(t.test3ap?`{
    position: relative;
}`:`{

}`)+`
div.b`+u(t.test3bp?`{
    position: relative;
}`:`{

}`)+`
img.ys:{
    position:absolute;
    top:10px;
    left:10px;
}`,1)]),s("div",null,[s("button",{onClick:a[16]||(a[16]=e=>t.test3ap=!t.test3ap)},"添加删除a absolute"),s("button",{onClick:a[17]||(a[17]=e=>t.test3bp=!t.test3bp)},"添加删除b absolute"),!t.test3ap&&!t.test3bp?(C(),z("span",ts,"将网页滑到最上面，看左上角，可以找到图片哦！")):D("",!0)])]),_:1}),as,o(l,{title:"试一试"},{default:i(()=>[s("div",es,[s("div",os,[s("img",{class:"ys",style:h([{height:"2rem","z-index":"100",position:"relative"},`transform:translate(${t.test4x},${t.test4y});`]),src:p},null,4)]),s("pre",is,`img.ys:{
    transform:translate(`+u(t.test4x)+","+u(t.test4y)+`);
}`,1),s("div",ls,[n(" x"),y(s("input",{type:"text","onUpdate:modelValue":a[18]||(a[18]=e=>t.test4x=e)},null,512),[[k,t.test4x]]),ps,n(" y"),y(s("input",{type:"text","onUpdate:modelValue":a[19]||(a[19]=e=>t.test4y=e)},null,512),[[k,t.test4y]])])])]),_:1}),cs,o(l,{title:"效果演示"},{default:i(()=>[rs]),_:1}),ds,o(l,{title:"效果演示"},{default:i(()=>[us]),_:1}),n(" ::: important 问题 这时候你会发现,向右移多了自己的50%宽度。并没有完美得居中。所以还需要第4步骤,将多移的50%移回来。 这时候之前讲到的```transform:translate(x,y);```就要发挥用途了。 ::: "),ms,o(l,{title:"效果演示"},{default:i(()=>[hs]),_:1}),ys,o(l,{title:"效果演示"},{default:i(()=>[ks,fs]),_:1}),gs,o(l,{title:"效果演示"},{default:i(()=>[vs,xs]),_:1}),bs,o(l,{title:"效果演示"},{default:i(()=>[_s]),_:1}),js,o(l,{title:"效果演示"},{default:i(()=>[ws]),_:1}),o(d,null,{default:i(()=>[n(" @keyframes ysstart-d1{ /* 定义 ysstart 动画关键帧 */ 0%{ opacity:100%; } 100%{ opacity:0%; } } img.ys-d1{ animation-name:ysstart-d1; /* ysstart 是动画的名称 */ animation-duration: 3s; /* 动画共持续3秒 */ animation-iteration-count: infinite; /* 动画只播放1次 */ animation-timing-function: linear; /* 匀速播放 */ } ")]),_:1}),Cs,o(l,{title:"效果演示"},{default:i(()=>[zs]),_:1}),o(d,null,{default:i(()=>[n(" @keyframes ysstart-d2{ /* 定义 ysstart 动画关键帧 */ 0%{ opacity:0%; } 50%{ opacity:100%; } 100%{ opacity:0%; } } img.ys-d2{ animation-name:ysstart-d2; /* ysstart 是动画的名称 */ animation-duration: 6s; /* 动画共持续3秒 */ animation-iteration-count: infinite; /* 动画只播放1次 */ animation-timing-function: linear; /* 匀速播放 */ } ")]),_:1}),Vs,o(d,null,{default:i(()=>[n(" .yuantext p { margin: 0; font-weight: bolder; font-size: 1rem } .yuantext { width: 100%; position: absolute; bottom: 0; margin-bottom: 1rem; text-align: center; animation: yuantext-animation 7s linear 0s 1; } .yuanimg { background-color: #ffffff00; position: absolute; left: 50%; top: 50%; transform: translate(-50%, -50%); width: 40vmin; animation: yuanimg-animation 7s linear 0s 1; } .start-main { position: fixed; top: 0; left: 0; height: 100vh; width: 100vw; background-color: white; animation: start-main-animation 7s linear 0s 1; opacity: 0; z-index: -99; } @keyframes yuantext-animation { 0% { opacity: 0%; } "),Es,Ns,Ss,Ts,Bs,Us]),_:1})])}const As=U(M,[["render",Ds],["__file","index.html.vue"]]),Zs=JSON.parse('{"path":"/2023/11/28/ysstart/","title":"原神启动!!! css动画详解。纯css动画实现原神启动，简单秒懂.","lang":"zh-CN","frontmatter":{"permalinkPattern":"2023/11/28/ysstart/","title":"原神启动!!! css动画详解。纯css动画实现原神启动，简单秒懂.","description":"纯css动画实现原神启动，简单秒懂，零基础。互动教程理解更透彻。","tags":["前端","css","整活"],"star":true,"head":[["meta",{"name":"keywords","content":"css动画 fixed"}],["meta",{"property":"og:url","content":"https://jjaw.cn/2023/11/28/ysstart/"}],["meta",{"property":"og:site_name","content":"神奇小破站"}],["meta",{"property":"og:title","content":"原神启动!!! css动画详解。纯css动画实现原神启动，简单秒懂."}],["meta",{"property":"og:description","content":"纯css动画实现原神启动，简单秒懂，零基础。互动教程理解更透彻。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-01-03T09:51:34.000Z"}],["meta",{"property":"article:tag","content":"前端"}],["meta",{"property":"article:tag","content":"css"}],["meta",{"property":"article:tag","content":"整活"}],["meta",{"property":"article:modified_time","content":"2025-01-03T09:51:34.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"原神启动!!! css动画详解。纯css动画实现原神启动，简单秒懂.\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-01-03T09:51:34.000Z\\",\\"author\\":[]}"]],"comment":true},"headers":[{"level":2,"title":"前情","slug":"前情","link":"#前情","children":[]},{"level":2,"title":"条件","slug":"条件","link":"#条件","children":[]},{"level":2,"title":"基础知识","slug":"基础知识","link":"#基础知识","children":[{"level":3,"title":"了解position的三个属性和常见的搭配","slug":"了解position的三个属性和常见的搭配","link":"#了解position的三个属性和常见的搭配","children":[]},{"level":3,"title":"了解transform中的translate(x,y)","slug":"了解transform中的translate-x-y","link":"#了解transform中的translate-x-y","children":[]}]},{"level":2,"title":"完美的的居中","slug":"完美的的居中","link":"#完美的的居中","children":[{"level":3,"title":"左右居中","slug":"左右居中","link":"#左右居中","children":[]},{"level":3,"title":"上下居中","slug":"上下居中","link":"#上下居中","children":[]},{"level":3,"title":"结合起来上下左右居中","slug":"结合起来上下左右居中","link":"#结合起来上下左右居中","children":[]}]},{"level":2,"title":"原神启动还缺少点灵魂 “动画”","slug":"原神启动还缺少点灵魂-动画","link":"#原神启动还缺少点灵魂-动画","children":[{"level":3,"title":"了解@keyframes","slug":"了解-keyframes","link":"#了解-keyframes","children":[]},{"level":3,"title":"了解 animation","slug":"了解-animation","link":"#了解-animation","children":[]},{"level":3,"title":"将两者集合,开始注入灵魂","slug":"将两者集合-开始注入灵魂","link":"#将两者集合-开始注入灵魂","children":[]}]}],"git":{"isRoot":true,"createdTime":1701604245000,"updatedTime":1735897894000,"contributors":[{"name":"jjaw","email":"jjaw@jjaw.cn","commits":9},{"name":"简简aw","email":"jjaw@jjaw.cn","commits":5}]},"excerpt":"\\n<h2>前情</h2>\\n<p>最近原神启动非常火，突然有一天我想随时随地原神启动。就想能不能用网页做一个原神启动呢？\\n有想法就要立即去做，于是很轻松这个效果就做好了。但是原神启动之后应该跳转到哪呢？\\n思考了很久，觉得那就跳转到一个教程页面吧，让大家都可以自己动手原神启动一下岂不是很完美？</p>\\n<h2>条件</h2>\\n<p>这个教程非常基础，很适合初学者，但是还是需要一些基础知识。</p>\\n<ul>\\n<li>html class(类) 的用法。</li>\\n<li>css 选择器 的用法和一些简单的属性。</li>\\n</ul>\\n<h2>基础知识</h2>\\n<h3>了解<code>position</code>的三个属性和常见的搭配</h3>","github_edit":{"fileGitUrl":"https://github.com/jianjianai/jjaw.cn/edit/master/articles/3-css原神启动效果/原神启动.md"}}');export{As as comp,Zs as data};
