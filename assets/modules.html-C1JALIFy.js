import{_ as i,r as n,o as l,c as a,b as s,e as t,d as o,a as p}from"./app-Di-cW_m4.js";const c={},r=p(`<h1 id="模块" tabindex="-1"><a class="header-anchor" href="#模块"><span>模块</span></a></h1><h2 id="为什么我导入的模块在编译后被删除了" tabindex="-1"><a class="header-anchor" href="#为什么我导入的模块在编译后被删除了"><span>为什么我导入的模块在编译后被删除了？</span></a></h2><blockquote><p>我写了一些这样的代码</p></blockquote><div class="language-typescript" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="line"><span class="token keyword">import</span> someModule <span class="token operator">=</span> <span class="token keyword">require</span><span class="token punctuation">(</span><span class="token string">&#39;./myMod&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">let</span> x<span class="token operator">:</span> someModule<span class="token punctuation">.</span>SomeType <span class="token operator">=</span> <span class="token comment">/* something */</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre></div><blockquote><p>有这样的输出</p></blockquote><div class="language-typescript" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="line"><span class="token comment">// Expected to see &quot;var someModule = require(&#39;./myMod&#39;);&quot; here!</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">var</span> x <span class="token operator">=</span> <span class="token comment">/* something */</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre></div><p><code>TypeScript</code> 假定导入的模块没有副作用，所以它移除了不用于任何表达式的模块导入。</p><p>使用 <code>import &quot;mod&quot;</code> 语法来强制加载模块</p><div class="language-typescript" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="line"><span class="token keyword">import</span> <span class="token string">&#39;./myMod&#39;</span><span class="token punctuation">;</span> <span class="token comment">// For side effects</span></span>
<span class="line"></span></code></pre></div><p>你也可以简单调用模块，这是最常见的解决办法。</p><div class="language-typescript" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="line"><span class="token keyword">import</span> someModule <span class="token operator">=</span> <span class="token keyword">require</span><span class="token punctuation">(</span><span class="token string">&#39;./myMod&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">someModule<span class="token punctuation">;</span> <span class="token comment">// Used for side effects</span></span>
<span class="line"></span></code></pre></div><h2 id="为什么不跨模块文件合并命名空间" tabindex="-1"><a class="header-anchor" href="#为什么不跨模块文件合并命名空间"><span>为什么不跨模块文件合并命名空间？</span></a></h2>`,12),k={href:"https://stackoverflow.com/questions/30357634/how-do-i-use-namespaces-with-typescript-external-modules",target:"_blank",rel:"noopener noreferrer"},m={href:"https://www.typescriptlang.org/docs/handbook/release-notes/typescript-1-5.html#namespace-keyword",target:"_blank",rel:"noopener noreferrer"};function d(g,h){const e=n("ExternalLinkIcon");return l(),a("div",null,[r,s("p",null,[t("TODO：本小节内容请查看："),s("a",k,[t("https://stackoverflow.com/questions/30357634/how-do-i-use-namespaces-with-typescript-external-modules"),o(e)]),t(" 或者 "),s("a",m,[t("https://www.typescriptlang.org/docs/handbook/release-notes/typescript-1-5.html#namespace-keyword"),o(e)])])])}const b=i(c,[["render",d],["__file","modules.html.vue"]]),y=JSON.parse(`{"path":"/git/ts-book/docs/faqs/modules.html","title":"模块","lang":"zh-CN","frontmatter":{"description":"模块 为什么我导入的模块在编译后被删除了？ 我写了一些这样的代码 有这样的输出 TypeScript 假定导入的模块没有副作用，所以它移除了不用于任何表达式的模块导入。 使用 import \\"mod\\" 语法来强制加载模块 你也可以简单调用模块，这是最常见的解决办法。 为什么不跨模块文件合并命名空间？ TODO：本小节内容请查看：https://stac...","head":[["meta",{"property":"og:url","content":"https://jjaw.cn/git/ts-book/docs/faqs/modules.html"}],["meta",{"property":"og:site_name","content":"神奇小破站"}],["meta",{"property":"og:title","content":"模块"}],["meta",{"property":"og:description","content":"模块 为什么我导入的模块在编译后被删除了？ 我写了一些这样的代码 有这样的输出 TypeScript 假定导入的模块没有副作用，所以它移除了不用于任何表达式的模块导入。 使用 import \\"mod\\" 语法来强制加载模块 你也可以简单调用模块，这是最常见的解决办法。 为什么不跨模块文件合并命名空间？ TODO：本小节内容请查看：https://stac..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2020-05-15T14:05:55.000Z"}],["meta",{"property":"article:modified_time","content":"2020-05-15T14:05:55.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"模块\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2020-05-15T14:05:55.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"为什么我导入的模块在编译后被删除了？","slug":"为什么我导入的模块在编译后被删除了","link":"#为什么我导入的模块在编译后被删除了","children":[]},{"level":2,"title":"为什么不跨模块文件合并命名空间？","slug":"为什么不跨模块文件合并命名空间","link":"#为什么不跨模块文件合并命名空间","children":[]}],"git":{"createdTime":1551100134000,"updatedTime":1589551555000,"contributors":[{"name":"jkchao","email":"jkchaom@gmail.com","commits":2},{"name":"AllenLee","email":"648384410li@gmail.com","commits":1},{"name":"重庆崽儿Brand","email":"brandhuang@qq.com","commits":1}]},"excerpt":"\\n<h2>为什么我导入的模块在编译后被删除了？</h2>\\n<blockquote>\\n<p>我写了一些这样的代码</p>\\n</blockquote>\\n<div class=\\"language-typescript\\" data-highlighter=\\"prismjs\\" data-ext=\\"ts\\" data-title=\\"ts\\"><pre class=\\"language-typescript\\"><code><span class=\\"line\\"><span class=\\"token keyword\\">import</span> someModule <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">require</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'./myMod'</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span class=\\"token keyword\\">let</span> x<span class=\\"token operator\\">:</span> someModule<span class=\\"token punctuation\\">.</span>SomeType <span class=\\"token operator\\">=</span> <span class=\\"token comment\\">/* something */</span><span class=\\"token punctuation\\">;</span></span>\\n<span class=\\"line\\"></span></code></pre></div>","autoDesc":true,"navPage":[{"title":"写在前面","items":[{"link":"/git/ts-book/docs/","title":"深入理解 TypeScript"}]},{"title":"TypeScript 项目","items":[{"link":"/git/ts-book/docs/project/compilationContext.html","title":"编译上下文"},{"link":"/git/ts-book/docs/project/declarationspaces.html","title":"声明空间"},{"link":"/git/ts-book/docs/project/modules.html","title":"模块"},{"link":"/git/ts-book/docs/project/namespaces.html","title":"命名空间"},{"link":"/git/ts-book/docs/project/dynamicImportExpressions.html","title":"动态导入表达式"}]},{"title":"TypeScript 类型系统","items":[{"link":"/git/ts-book/docs/typings/overview.html","title":"概览"},{"link":"/git/ts-book/docs/typings/migrating.html","title":"从 JavaScript 迁移"},{"link":"/git/ts-book/docs/typings/types.html","title":"@types"},{"link":"/git/ts-book/docs/typings/ambient.html","title":"环境声明"},{"link":"/git/ts-book/docs/typings/interfaces.html","title":"接口"},{"link":"/git/ts-book/docs/typings/enums.html","title":"枚举"},{"link":"/git/ts-book/docs/typings/lib.html","title":"lib.d.ts"},{"link":"/git/ts-book/docs/typings/functions.html","title":"函数"},{"link":"/git/ts-book/docs/typings/callable.html","title":"可调用的"},{"link":"/git/ts-book/docs/typings/typeAssertion.html","title":"类型断言"},{"link":"/git/ts-book/docs/typings/freshness.html","title":"Freshness"},{"link":"/git/ts-book/docs/typings/typeGuard.html","title":"类型保护"},{"link":"/git/ts-book/docs/typings/literals.html","title":"字面量类型"},{"link":"/git/ts-book/docs/typings/readonly.html","title":"readonly"},{"link":"/git/ts-book/docs/typings/generices.html","title":"泛型"},{"link":"/git/ts-book/docs/typings/typeInference.html","title":"类型推断"},{"link":"/git/ts-book/docs/typings/typeCompatibility.html","title":"类型兼容性"},{"link":"/git/ts-book/docs/typings/neverType.html","title":"Never"},{"link":"/git/ts-book/docs/typings/discrominatedUnion.html","title":"辨析联合类型"},{"link":"/git/ts-book/docs/typings/indexSignatures.html","title":"索引签名"},{"link":"/git/ts-book/docs/typings/movingTypes.html","title":"流动的类型"},{"link":"/git/ts-book/docs/typings/exceptionsHanding.html","title":"异常处理"},{"link":"/git/ts-book/docs/typings/mixins.html","title":"混合"},{"link":"/git/ts-book/docs/typings/thisType.html","title":"ThisType"}]},{"title":"JSX","items":[{"link":"/git/ts-book/docs/jsx/support.html","title":"支持 JSX"},{"link":"/git/ts-book/docs/jsx/reactJSX.html","title":"React JSX"},{"link":"/git/ts-book/docs/jsx/nonReactJSX.html","title":"非 React JSX"}]},{"title":"TypeScript 错误提示","items":[{"link":"/git/ts-book/docs/error/interpreting.html","title":"解读 Errors"},{"link":"/git/ts-book/docs/error/common.html","title":"常见的 Error"}]},{"title":"TIPs","items":[{"link":"/git/ts-book/docs/tips/stringBasedEmuns.html","title":"基于字符串的枚举"},{"link":"/git/ts-book/docs/tips/nominalTyping.html","title":"名义化类型"},{"link":"/git/ts-book/docs/tips/statefulFunctions.html","title":"状态函数"},{"link":"/git/ts-book/docs/tips/bind.html","title":"Bind 是有害的"},{"link":"/git/ts-book/docs/tips/curry.html","title":"柯里化"},{"link":"/git/ts-book/docs/tips/typeInstantiation.html","title":"泛型的实例化类型"},{"link":"/git/ts-book/docs/tips/lazyObjectLiteralInitialization.html","title":"对象字面量的惰性初始化"},{"link":"/git/ts-book/docs/tips/classAreUseful.html","title":"类是有用的"},{"link":"/git/ts-book/docs/tips/avoidExportDefault.html","title":"export default 被认为是有害的"},{"link":"/git/ts-book/docs/tips/limitPropertySetters.html","title":"减少 setter 属性的使用"},{"link":"/git/ts-book/docs/tips/createArrays.html","title":"创建数组"},{"link":"/git/ts-book/docs/tips/outFileCaution.html","title":"谨慎使用 --outFile"},{"link":"/git/ts-book/docs/tips/staticConstructors.html","title":"TypeScript 中的静态构造函数"},{"link":"/git/ts-book/docs/tips/singletonPatern.html","title":"单例模式"},{"link":"/git/ts-book/docs/tips/functionParameters.html","title":"函数参数"},{"link":"/git/ts-book/docs/tips/truthy.html","title":"Truthy"},{"link":"/git/ts-book/docs/tips/buildToggles.html","title":"构建切换"},{"link":"/git/ts-book/docs/tips/typesafeEventEmitter.html","title":"类型安全的 Event Emitter"},{"link":"/git/ts-book/docs/tips/metadata.html","title":"Reflect Metadata"},{"link":"/git/ts-book/docs/tips/covarianceAndContravariance.html","title":"协变与逆变"},{"link":"/git/ts-book/docs/tips/infer.html","title":"infer"}]},{"title":"TypeScript 编译原理","items":[{"link":"/git/ts-book/docs/compiler/overview.html","title":"概览"},{"link":"/git/ts-book/docs/compiler/program.html","title":"程序"},{"link":"/git/ts-book/docs/compiler/ast.html","title":"抽象语法树"},{"link":"/git/ts-book/docs/compiler/scanner.html","title":"扫描器"},{"link":"/git/ts-book/docs/compiler/parser.html","title":"解析器"},{"link":"/git/ts-book/docs/compiler/binder.html","title":"绑定器"},{"link":"/git/ts-book/docs/compiler/checker.html","title":"检查器"},{"link":"/git/ts-book/docs/compiler/emitter.html","title":"发射器"}]},{"title":"TypeScript FAQs","items":[{"link":"/git/ts-book/docs/faqs/common-bug-not-bugs.html","title":"一些常见的「bug」并不是 bug"},{"link":"/git/ts-book/docs/faqs/common-feature-request.html","title":"一些常见的 Feature 需求"},{"link":"/git/ts-book/docs/faqs/type-system-behavior.html","title":"类型系统的行为"},{"link":"/git/ts-book/docs/faqs/function.html","title":"函数"},{"link":"/git/ts-book/docs/faqs/class.html","title":"类"},{"link":"/git/ts-book/docs/faqs/generics.html","title":"泛型"},{"link":"/git/ts-book/docs/faqs/modules.html","title":"模块"},{"link":"/git/ts-book/docs/faqs/enums.html","title":"枚举"},{"link":"/git/ts-book/docs/faqs/type-guards.html","title":"类型守卫"},{"link":"/git/ts-book/docs/faqs/jsx-and-react.html","title":"JSX 和 React"},{"link":"/git/ts-book/docs/faqs/thing-that-dont-work.html","title":"一些不能按预期工作的代码"},{"link":"/git/ts-book/docs/faqs/commandline-behavior.html","title":"命令行的行为"},{"link":"/git/ts-book/docs/faqs/tsconfig-behavior.html","title":"tsconfig.json 的行为"}]},{"title":"TypeScript 更新","items":[{"link":"/git/ts-book/docs/new/typescript-3.9.html","title":"TypeScript 3.9"},{"link":"/git/ts-book/docs/new/typescript-3.8.html","title":"TypeScript 3.8"},{"link":"/git/ts-book/docs/new/typescript-3.7.html","title":"TypeScript 3.7"}]}]}`);export{b as comp,y as data};
