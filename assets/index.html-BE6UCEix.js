import{_ as o,r as i,o as p,c as d,d as m,w as a,a as l,e as s,b as n}from"./app-UECDeQc0.js";const r={},h=l(`<h1 id="mysql8设置最大连接数" tabindex="-1"><a class="header-anchor" href="#mysql8设置最大连接数"><span>MYSQL8设置最大连接数</span></a></h1><h2 id="max-connections-和-mysqlx-max-connections" tabindex="-1"><a class="header-anchor" href="#max-connections-和-mysqlx-max-connections"><span><code>max_connections</code> 和 <code>mysqlx_max_connections</code></span></a></h2><p>在mysql8版本，有两个最大连接数的选项 <code>max_connections</code> 和 <code>mysqlx_max_connections</code>。</p><ul><li>max_connections 通常的最大连接数；</li><li>mysqlx_max_connections 它用于设置MySQL X Protocol（X协议）的最大连接数。MySQL X Protocol是MySQL8的一种新的协议，它基于WebSocket和JSON，用于提供无状态、基于文档的访问MySQL的功能。</li></ul><p>通常需要同时设定这两个数值，且数值一致。</p><h2 id="修改" tabindex="-1"><a class="header-anchor" href="#修改"><span>修改</span></a></h2><h3 id="mysql8" tabindex="-1"><a class="header-anchor" href="#mysql8"><span>mysql8</span></a></h3><p>在MySQL 8版本中可以直接使用SET PERSIST命令修改并持久化全局变量的配置，这样即使数据库重启，设置也会保持有效。</p><div class="language-sql" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="line"><span class="token keyword">SET</span> PERSIST max_connections<span class="token operator">=</span><span class="token number">1024</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">SET</span> PERSIST mysqlx_max_connections<span class="token operator">=</span><span class="token number">1024</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre></div><div class="hint-container tip"><p class="hint-container-title">提示</p><p>在MySQL 8之前的版本中，全局变量的修改只会影响内存值，不会持久化到配置文件中。数据库重启后，设置会恢复为修改前的值。从MySQL 8开始，可以通过SET PERSIST命令将全局变量的修改持久化到配置文件中。</p></div><h3 id="mysql5" tabindex="-1"><a class="header-anchor" href="#mysql5"><span>mysql5</span></a></h3><ol><li>打开MySQL的配置文件<code>my.cnf</code>（Linux系统）或<code>my.ini</code>（Windows系统）。</li></ol><h4 id="ubuntu" tabindex="-1"><a class="header-anchor" href="#ubuntu"><span>ubuntu</span></a></h4><p>ubuntu为例,打开编辑<code>my.cnf</code>文件。</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token function">vim</span> /etc/mysql/my.cnf</span>
<span class="line"></span></code></pre></div>`,15),u=n("p",null,[s("通常情况下，如果"),n("code",null,"my.cnf"),s("里,有"),n("code",null,"!includedir /etc/mysql/mysql.conf.d/"),s(",例如下面这样。")],-1),y=n("div",{class:"language-toml","data-highlighter":"prismjs","data-ext":"toml","data-title":"toml"},[n("pre",{class:"language-toml"},[n("code",null,[n("span",{class:"line"},[s("!includedir /etc/mysql/conf"),n("span",{class:"token punctuation"},"."),s("d/")]),s(`
`),n("span",{class:"line"},[s("!includedir /etc/mysql/mysql"),n("span",{class:"token punctuation"},"."),s("conf"),n("span",{class:"token punctuation"},"."),s("d/")]),s(`
`),n("span",{class:"line"})])])],-1),x=n("p",null,[s("就去编辑"),n("code",null,"mysql.conf.d"),s(" 下的 "),n("code",null,"mysqld.cnf"),s(" 文件")],-1),_=n("div",{class:"language-bash","data-highlighter":"prismjs","data-ext":"sh","data-title":"sh"},[n("pre",{class:"language-bash"},[n("code",null,[n("span",{class:"line"},[n("span",{class:"token function"},"vim"),s(" /etc/mysql/mysql.conf.d/mysqld.cnf")]),s(`
`),n("span",{class:"line"})])])],-1),g=n("p",null,[s("第54行，"),n("code",null,"#max_connections"),s("把#删掉，取消注释，后面给改连接数。")],-1),q=n("div",{class:"language-toml","data-highlighter":"prismjs","data-ext":"toml","data-title":"toml"},[n("pre",{class:"language-toml"},[n("code",null,[n("span",{class:"line"},[n("span",{class:"token comment"},"# This replaces the startup script and checks MyISAM tables if needed")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"# the first time they are touched")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token key property"},"myisam-recover-options"),s("  "),n("span",{class:"token punctuation"},"="),s(" BACKUP")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token key property"},"max_connections"),s("        "),n("span",{class:"token punctuation"},"="),s(),n("span",{class:"token number"},"100"),s(),n("span",{class:"token comment"},"# <<--- 在这里")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"#table_open_cache       = 64")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"#thread_concurrency     = 10")]),s(`
`),n("span",{class:"line"})])])],-1),S=n("p",null,[s("直接修改"),n("code",null,"my.cnf"),s("文件。如果没用"),n("code",null,"[mysqld]"),s("部分则添加，查找"),n("code",null,"max_connections"),s("参数。如果不存在，则添加"),n("code",null,"max_connections=您希望的数值"),s("如果存在，则修改为所需的数值。")],-1),k=n("div",{class:"language-toml","data-highlighter":"prismjs","data-ext":"toml","data-title":"toml"},[n("pre",{class:"language-toml"},[n("code",null,[n("span",{class:"line"},[n("span",{class:"token punctuation"},"["),n("span",{class:"token table class-name"},"mysqld"),n("span",{class:"token punctuation"},"]")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token key property"},"max_connections"),s(),n("span",{class:"token punctuation"},"="),s(),n("span",{class:"token number"},"100")]),s(`
`),n("span",{class:"line"})])])],-1),v=l(`<p>编辑并保存好文件之后重启mysql服务即可。</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token function">service</span> mysql restart</span>
<span class="line"></span></code></pre></div><h2 id="查询" tabindex="-1"><a class="header-anchor" href="#查询"><span>查询</span></a></h2><p>使用这条命令可以查看<code>max_connections</code> 和 <code>mysqlx_max_connections</code>当前的值。</p><div class="language-sql" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="line"><span class="token keyword">show</span> variables <span class="token operator">like</span> <span class="token string">&#39;%max_connections&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre></div><p>插件结果</p><div class="language-text" data-highlighter="prismjs" data-ext="text" data-title="text"><pre class="language-text"><code><span class="line">+------------------------+-------+</span>
<span class="line">| Variable_name          | Value |</span>
<span class="line">+------------------------+-------+</span>
<span class="line">| max_connections        | 1024  |</span>
<span class="line">| mysqlx_max_connections | 1024  |</span>
<span class="line">+------------------------+-------+</span>
<span class="line">2 rows in set (0.06 sec)</span>
<span class="line"></span></code></pre></div>`,7);function b(f,L){const c=i("Tabs");return p(),d("div",null,[h,m(c,{id:"56",data:[{id:"通常情况"},{id:"万能方法"}]},{title0:a(({value:e,isActive:t})=>[s("通常情况")]),title1:a(({value:e,isActive:t})=>[s("万能方法")]),tab0:a(({value:e,isActive:t})=>[u,y,x,_,g,q]),tab1:a(({value:e,isActive:t})=>[S,k]),_:1}),v])}const Q=o(r,[["render",b],["__file","index.html.vue"]]),T=JSON.parse('{"path":"/2024/5/6/mysql8-max-conn/","title":"MYSQL8或MYSQL5设置最大连接数，深入解析MySQL最大连接数：配置与管理全指南","lang":"zh-CN","frontmatter":{"permalinkPattern":"2024/5/6/mysql8-max-conn/","title":"MYSQL8或MYSQL5设置最大连接数，深入解析MySQL最大连接数：配置与管理全指南","description":"本文详细讲解了在MySQL 8中如何精确设置和监控最大连接数。深入探讨了max_connections与mysqlx_max_connections两个关键参数的配置方法，以及如何利用SET PERSIST命令持久化这些设置，确保数据库重启后设置依旧生效。文章还包含了查询当前最大连接数配置的实用SQL命令。","tags":["后端"],"star":true,"comment":true,"head":[["meta",{"property":"og:url","content":"https://jjaw.cn/2024/5/6/mysql8-max-conn/"}],["meta",{"property":"og:site_name","content":"神奇小破站"}],["meta",{"property":"og:title","content":"MYSQL8或MYSQL5设置最大连接数，深入解析MySQL最大连接数：配置与管理全指南"}],["meta",{"property":"og:description","content":"本文详细讲解了在MySQL 8中如何精确设置和监控最大连接数。深入探讨了max_connections与mysqlx_max_connections两个关键参数的配置方法，以及如何利用SET PERSIST命令持久化这些设置，确保数据库重启后设置依旧生效。文章还包含了查询当前最大连接数配置的实用SQL命令。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-06T09:37:52.000Z"}],["meta",{"property":"article:tag","content":"后端"}],["meta",{"property":"article:modified_time","content":"2024-05-06T09:37:52.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"MYSQL8或MYSQL5设置最大连接数，深入解析MySQL最大连接数：配置与管理全指南\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-05-06T09:37:52.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"max_connections 和 mysqlx_max_connections","slug":"max-connections-和-mysqlx-max-connections","link":"#max-connections-和-mysqlx-max-connections","children":[]},{"level":2,"title":"修改","slug":"修改","link":"#修改","children":[{"level":3,"title":"mysql8","slug":"mysql8","link":"#mysql8","children":[]},{"level":3,"title":"mysql5","slug":"mysql5","link":"#mysql5","children":[]}]},{"level":2,"title":"查询","slug":"查询","link":"#查询","children":[]}],"git":{"isRoot":true,"createdTime":1714985617000,"updatedTime":1714988272000,"contributors":[{"name":"jjaw","email":"jjaw@jjaw.cn","commits":2}]},"excerpt":"\\n<h2><code>max_connections</code> 和 <code>mysqlx_max_connections</code></h2>\\n<p>在mysql8版本，有两个最大连接数的选项 <code>max_connections</code> 和 <code>mysqlx_max_connections</code>。</p>\\n<ul>\\n<li>max_connections 通常的最大连接数；</li>\\n<li>mysqlx_max_connections 它用于设置MySQL X Protocol（X协议）的最大连接数。MySQL X Protocol是MySQL8的一种新的协议，它基于WebSocket和JSON，用于提供无状态、基于文档的访问MySQL的功能。</li>\\n</ul>","github_edit":{"filePathRelative":"articles/8-mysql/2-mysql8设置最大连接数/mysql8设置最大连接数.md"}}');export{Q as comp,T as data};
